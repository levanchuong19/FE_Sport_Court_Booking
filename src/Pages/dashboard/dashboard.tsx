import { useState } from "react";

export default function Dashboard() {
    // D·ªØ li·ªáu ƒë·ªông cho c√°c card th·ªëng k√™
    const [stats] = useState([
        {
            label: "T·ªïng ƒë·∫∑t s√¢n h√¥m nay",
            icon: "üìÖ",
            value: 24,
            change: "+12% so v·ªõi h√¥m qua",
            changeColor: "text-green-600",
        },
        {
            label: "Doanh thu h√¥m nay",
            icon: "üí∞",
            value: "4,200,000 VNƒê",
            change: "+8% so v·ªõi h√¥m qua",
            changeColor: "text-green-600",
        },
        {
            label: "S√¢n ƒëang ho·∫°t ƒë·ªông",
            icon: "üìç",
            value: "8/12",
            change: "67% t·ª∑ l·ªá s·ª≠ d·ª•ng",
            changeColor: "text-blue-600",
        },
        {
            label: "Kh√°ch h√†ng m·ªõi",
            icon: "üë§",
            value: 12,
            change: "+3 so v·ªõi h√¥m qua",
            changeColor: "text-green-600",
        },
    ])

    // D·ªØ li·ªáu ƒë·ªông cho tr·∫°ng th√°i s√¢n
    const [fields] = useState([
        {
            name: "S√¢n b√≥ng ƒë√° 1",
            type: "B√≥ng ƒë√°",
            price: "150,000 VNƒê/gi·ªù",
            status: "Tr·ªëng",
            statusColor: "bg-green-100 text-green-700",
        },
        {
            name: "S√¢n tennis 2",
            type: "Tennis",
            price: "120,000 VNƒê",
            status: "ƒêang s·ª≠ d·ª•ng",
            statusColor: "bg-red-100 text-red-700",
        },
    ]);

    // D·ªØ li·ªáu ƒë·ªông cho check-in s√¢n ƒë√£ ƒë·∫∑t
    const [checkins, setCheckins] = useState([
        {
            id: 1,
            customer: "Nguy·ªÖn VƒÉn A",
            field: "S√¢n b√≥ng ƒë√° 1",
            time: "14:00 - 16:00",
            checkedIn: false,
        },
        {
            id: 2,
            customer: "Tr·∫ßn Th·ªã B",
            field: "S√¢n tennis 2",
            time: "16:00 - 17:00",
            checkedIn: true,
        },
    ]);

    // D·ªØ li·ªáu ƒë·ªông cho duy·ªát s√¢n m·ªõi
    const [pendingFields, setPendingFields] = useState([
        { id: 1, name: "S√¢n b√≥ng ƒë√° 7 ng∆∞·ªùi", owner: "L√™ VƒÉn Ch·ªß", location: "Qu·∫≠n 9, TP.HCM", status: "pending" },
        { id: 2, name: "S√¢n tennis s·ªë 5", owner: "Nguy·ªÖn Th·ªã Ch·ªß", location: "Qu·∫≠n 2, TP.HCM", status: "pending" },
    ]);

    const handleCheckIn = (id: number) => {
        setCheckins((prev) => prev.map(item => item.id === id ? { ...item, checkedIn: true } : item));
    };

    const handleApprove = (id: number) => {
        setPendingFields((prev) => prev.map(f => f.id === id ? { ...f, status: "approved" } : f));
    };
    const handleReject = (id: number) => {
        setPendingFields((prev) => prev.map(f => f.id === id ? { ...f, status: "rejected" } : f));
    };

    return (
        <div className="flex min-h-screen bg-gray-50 bg">
            {/* Sidebar */}
            

            {/* Main Content */}
            <main className="flex-1 p-8">
                {/* Header */}
                <div className="flex items-center justify-between mb-8">
                    <h1 className="text-3xl font-bold">Dashboard</h1>
                   
                    <div>
                        {/* Th√™m icon ho·∫∑c n√∫t ·ªü ƒë√¢y n·∫øu c·∫ßn */}
                    </div>
                </div>

                {/* Card th·ªëng k√™ */}
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    {stats.map((item, idx) => (
                        <div key={idx} className="bg-white rounded-xl shadow p-6">
                            <div className="text-gray-500 text-sm mb-2 flex items-center gap-2">
                                {item.label} <span>{item.icon}</span>
                            </div>
                            <div className="text-3xl font-bold mb-1">{item.value}</div>
                            <div className={`${item.changeColor} text-xs`}>{item.change}</div>
                        </div>
                    ))}
                </div>

                {/* B·∫£ng v√† tr·∫°ng th√°i s√¢n */}
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    {/* Check-in s√¢n ƒë√£ ƒë·∫∑t */}
                    <div className="lg:col-span-2 bg-white dark:bg-gray-900 rounded-xl shadow p-6">
                        <div className="flex items-center justify-between mb-4">
                            <div>
                                <h2 className="text-2xl font-bold">Check-in</h2>
                                <p className="text-gray-500 text-sm">Danh s√°ch c√°c s√¢n ƒë√£ ƒë·∫∑t, th·ª±c hi·ªán check-in khi ƒë·∫øn s√¢n</p>
                            </div>
                        </div>
                        <div className="overflow-x-auto">
                            <table className="min-w-full text-sm">
                                <thead>
                                    <tr className="bg-gray-100 dark:bg-gray-800">
                                        <th className="py-2 px-4 text-left">Kh√°ch h√†ng</th>
                                        <th className="py-2 px-4 text-left">S√¢n</th>
                                        <th className="py-2 px-4 text-left">Th·ªùi gian</th>
                                        <th className="py-2 px-4 text-left">Tr·∫°ng th√°i</th>
                                        <th className="py-2 px-4 text-left">Check-in</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {checkins.map((item) => (
                                        <tr key={item.id} className="border-b border-gray-200 dark:border-gray-700">
                                            <td className="py-2 px-4 font-semibold">{item.customer}</td>
                                            <td className="py-2 px-4">{item.field}</td>
                                            <td className="py-2 px-4">{item.time}</td>
                                            <td className="py-2 px-4">
                                                {item.checkedIn ? (
                                                    <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs">ƒê√£ check-in</span>
                                                ) : (
                                                    <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-xs">Ch∆∞a check-in</span>
                                                )}
                                            </td>
                                            <td className="py-2 px-4">
                                                {item.checkedIn ? (
                                                    <button className="px-3 py-1 rounded-lg bg-green-500 text-white text-xs font-semibold cursor-default" disabled>ƒê√£ check-in</button>
                                                ) : (
                                                    <button className="px-3 py-1 rounded-lg bg-blue-500 hover:bg-blue-600 text-white text-xs font-semibold" onClick={() => handleCheckIn(item.id)}>Check-in</button>
                                                )}
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    {/* Tr·∫°ng th√°i s√¢n */}
                    <div className="bg-white rounded-xl shadow p-6">
                        <h2 className="text-2xl font-bold mb-4">Tr·∫°ng th√°i s√¢n</h2>
                        <p className="text-gray-500 text-sm mb-4">T√¨nh tr·∫°ng hi·ªán t·∫°i c·ªßa c√°c s√¢n</p>
                        <div className="space-y-4">
                            {fields.map((f, idx) => (
                                <div key={idx} className="border border-gray-200 rounded-lg p-4">
                                    <div className="font-semibold">{f.name}</div>
                                    <div className="text-gray-500 text-xs mb-1">{f.type}</div>
                                    <div className="text-blue-600 text-xs mb-1">{f.price}</div>
                                    <span className={`px-3 py-1 rounded-full text-xs ${f.statusColor}`}>{f.status}</span>
                                </div>
                            ))}
                        </div>
                    </div>

                </div>
                
                     {/* Duy·ªát s√¢n m·ªõi */}
                     <div className="bg-white dark:bg-gray-900 rounded-xl shadow p-6 mt-10">
                        <h2 className="text-2xl font-bold mb-4">Duy·ªát s√¢n m·ªõi</h2>
                        <p className="text-gray-500 text-sm mb-4">Danh s√°ch s√¢n v·ª´a ƒë∆∞·ª£c ch·ªß s√¢n up l√™n, c·∫ßn duy·ªát ƒë·ªÉ hi·ªÉn th·ªã tr√™n h·ªá th·ªëng</p>
                        <div className="overflow-x-auto">
                            <table className="min-w-full text-sm">
                                <thead>
                                    <tr className="bg-gray-100 dark:bg-gray-800">
                                        <th className="py-2 px-4 text-left">T√™n s√¢n</th>
                                        <th className="py-2 px-4 text-left">Ch·ªß s√¢n</th>
                                        <th className="py-2 px-4 text-left">ƒê·ªãa ƒëi·ªÉm</th>
                                        <th className="py-2 px-4 text-left">Tr·∫°ng th√°i</th>
                                        <th className="py-2 px-4 text-left">H√†nh ƒë·ªông</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {pendingFields.map((f) => (
                                        <tr key={f.id} className="border-b border-gray-200 dark:border-gray-700">
                                            <td className="py-2 px-4 font-semibold">{f.name}</td>
                                            <td className="py-2 px-4">{f.owner}</td>
                                            <td className="py-2 px-4">{f.location}</td>
                                            <td className="py-2 px-4">
                                                {f.status === "pending" && <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-xs">Ch·ªù duy·ªát</span>}
                                                {f.status === "approved" && <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs">ƒê√£ duy·ªát</span>}
                                                {f.status === "rejected" && <span className="bg-red-100 text-red-700 px-3 py-1 rounded-full text-xs">ƒê√£ t·ª´ ch·ªëi</span>}
                                            </td>
                                            <td className="py-2 px-4 flex gap-2">
                                                {f.status === "pending" && (
                                                    <>
                                                        <button className="px-3 py-1 rounded-lg bg-green-500 hover:bg-green-600 text-white text-xs font-semibold" onClick={() => handleApprove(f.id)}>Duy·ªát</button>
                                                        <button className="px-3 py-1 rounded-lg bg-red-500 hover:bg-red-600 text-white text-xs font-semibold" onClick={() => handleReject(f.id)}>T·ª´ ch·ªëi</button>
                                                    </>
                                                )}
                                                {f.status !== "pending" && (
                                                    <button className="px-3 py-1 rounded-lg bg-gray-300 text-gray-600 text-xs font-semibold cursor-default" disabled>ƒê√£ x·ª≠ l√Ω</button>
                                                )}
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </div>
            </main>
        </div>
    )
}